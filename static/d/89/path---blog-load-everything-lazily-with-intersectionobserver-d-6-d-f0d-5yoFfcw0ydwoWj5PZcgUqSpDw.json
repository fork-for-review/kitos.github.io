{"data":{"post":{"title":"Load everything lazily with IntersectionObserver","createdAt":"2019-01-23T09:34:52.446Z","updatedAt":"2019-01-23T09:34:52.446Z","tags":["react-hooks","reactjs","web-api"],"content":{"childContentfulRichText":{"html":"<p>Just after I&#39;ve released <a href=\"https://www.nikitakirsanov.com/changelog/\" target=\"_blank\" rel=\"noopener noreferrer\">1.8</a> version of site and published post <a href=\"https://www.nikitakirsanov.com/blog/implementing-medium-like-tooltip/\" target=\"_blank\" rel=\"noopener noreferrer\">Implementing medium like tooltip</a>, I had understood its page loads 6 mb! And it is absolutely inappropriate for my blazing fast site. The most significant change of this release was integration with <a href=\"https://codesandbox.io\" target=\"_blank\" rel=\"noopener noreferrer\">codesandbox</a>: all embedded links to it are transformed to iframes. Results I&#39;ve got in <i>network</i> tab of chrome dev tools also had met my expectations: most of resources were loaded by iframes.</p><p>Obvious solution is to load iframes lazily - when they appear in the viewport. So here is a code I came up with:</p><p>First of all rename src attribute of iframe to something else (e.g. data-src), so it won&#39;t load anything during initial load.</p><img src=\"//images.ctfassets.net/6dybdba3jdxv/7nlwvHt8cc9gtB0GN6afGb/6a0ef4ae0b1384a0b05b3158053058c3/lazy-load-iframe.jpg\" alt=\"Rename src attribute to something else (e.g. data-src)\" style=\"display: block; max-width: 450px; margin: 0 auto\" /><p>And insert src when iframe intersects with viewport:</p><p><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// react hooks fits perfect for extracting</span>\n<span class=\"token comment\">// such type (not only) of reusable logic</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">useLazyIframe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token comment\">// we need to register our observer after our component mounted</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>\n      entries <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        entries\n          <span class=\"token comment\">// filer only visible iframes</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=></span> e<span class=\"token punctuation\">.</span>isIntersecting<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target<span class=\"token punctuation\">:</span> $el <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// iframe will start loading now</span>\n            $el<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> $el<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// no need to observe it anymore</span>\n            observer<span class=\"token punctuation\">.</span><span class=\"token function\">unobserve</span><span class=\"token punctuation\">(</span>$el<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// we'll load iframe a bit beforehand</span>\n        rootMargin<span class=\"token punctuation\">:</span> <span class=\"token string\">'10%'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span>\n\n    document\n      <span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'iframe[data-src]'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>$el <span class=\"token operator\">=></span> observer<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>$el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// do not forget to clean up on component unmount</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> observer<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token comment\">/* we need to register observer once */</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></p><p>That&#39;s it!</p><hr/><p><b>Read more:</b></p><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\" target=\"_blank\" rel=\"noopener noreferrer\">Intersection Observer API</a></p><p><a href=\"https://developers.google.com/web/updates/2016/04/intersectionobserver\" target=\"_blank\" rel=\"noopener noreferrer\"> IntersectionObserverâ€™s Coming into View</a></p><p><a href=\"https://reactjs.org/docs/hooks-overview.html\" target=\"_blank\" rel=\"noopener noreferrer\">React hooks overview</a></p>"}}},"site":{"meta":{"siteUrl":"https://www.nikitakirsanov.com"}}},"pageContext":{"slug":"load-everything-lazily-with-intersectionobserver"}}